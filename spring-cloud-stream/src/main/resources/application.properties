
server.port=8888

# If you use RabbitMQ
#spring.rabbitmq.host=localhost
#spring.rabbitmq.password=password
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=user

# If you use Kafka
spring.cloud.stream.kafka.binder.brokers=localhost:9092
# All topic have the same partition
spring.cloud.stream.kafka.binder.min-partition-count=2
spring.cloud.stream.kafka.binder.autoAddPartitions=true
#spring.cloud.stream.kafka.bindings.orderCreated-in-0.consumer.configuration.value.deserializer=


spring.cloud.stream.function.definition=orderCreated;processNewOrder;newOrderNotify
spring.cloud.stream.bindings.orderCreated-in-0.destination=d-order-created
spring.cloud.stream.bindings.orderCreated-in-0.group=g-order-created
spring.cloud.stream.bindings.orderCreated-out-0.destination=d-after-order-created
# partition count
spring.cloud.stream.bindings.orderCreated.producer.partition-count=3

spring.cloud.stream.bindings.processNewOrder-in-0.destination=d-after-order-created
spring.cloud.stream.bindings.processNewOrder-in-0.group=g-process-new-order

spring.cloud.stream.bindings.newOrderNotify-in-0.destination=d-after-order-created
spring.cloud.stream.bindings.newOrderNotify-in-0.group=g-new-order-notify